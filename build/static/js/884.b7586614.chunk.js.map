{"version":3,"file":"static/js/884.b7586614.chunk.js","mappings":"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","sources":["webpack://project8/./src/components/UI/LoadingSpinner.module.css?c5d9","components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","webpack://project8/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://project8/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"LoadingSpinner_spinner__ZSbA1\"};","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n\tif (action.type === 'SEND') {\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: null,\n\t\t\tstatus: 'pending',\n\t\t};\n\t}\n\n\tif (action.type === 'SUCCESS') {\n\t\treturn {\n\t\t\tdata: action.responseData,\n\t\t\terror: null,\n\t\t\tstatus: 'completed',\n\t\t};\n\t}\n\n\tif (action.type === 'ERROR') {\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: action.errorMessage,\n\t\t\tstatus: 'completed',\n\t\t};\n\t}\n\n\treturn state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n\tconst [httpState, dispatch] = useReducer(httpReducer, {\n\t\tstatus: startWithPending ? 'pending' : null,\n\t\tdata: null,\n\t\terror: null,\n\t});\n\n\tconst sendRequest = useCallback(\n\t\tasync function (requestData) {\n\t\t\tdispatch({ type: 'SEND' });\n\t\t\ttry {\n\t\t\t\tconst responseData = await requestFunction(requestData);\n\t\t\t\tdispatch({ type: 'SUCCESS', responseData });\n\t\t\t\tconsole.log(responseData);\n\t\t\t} catch (error) {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'ERROR',\n\t\t\t\t\terrorMessage: error.message || 'Something went wrong!',\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[requestFunction]\n\t);\n\n\treturn {\n\t\tsendRequest,\n\t\t...httpState,\n\t};\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-http-bc7c5-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n\tconst response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n\tconst data = await response.json();\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.message || 'Could not fetch quotes.');\n\t}\n\n\tconst transformedQuotes = [];\n\n\tfor (const key in data) {\n\t\tconst quoteObj = {\n\t\t\tid: key,\n\t\t\t...data[key],\n\t\t};\n\n\t\ttransformedQuotes.push(quoteObj);\n\t}\n\n\treturn transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n\tconst response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n\tconst data = await response.json();\n\tconsole.log(data);\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.message || 'Could not fetch quote.');\n\t}\n\n\tconst loadedQuote = {\n\t\tid: quoteId,\n\t\t...data,\n\t};\n\n\treturn loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n\tconst response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(quoteData),\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t});\n\tconst data = await response.json();\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.message || 'Could not create quote.');\n\t}\n\n\treturn null;\n}\n\nexport async function addComment(requestData) {\n\tconst response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(requestData.commentData),\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t});\n\tconst data = await response.json();\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.message || 'Could not add comment.');\n\t}\n\n\treturn { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n\tconst response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n\tconst data = await response.json();\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.message || 'Could not get comments.');\n\t}\n\n\tconst transformedComments = [];\n\n\tfor (const key in data) {\n\t\tconst commentObj = {\n\t\t\tid: key,\n\t\t\t...data[key],\n\t\t};\n\n\t\ttransformedComments.push(commentObj);\n\t}\n\n\treturn transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__O+Uwx\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__fUFg1\",\"loading\":\"QuoteForm_loading__oykYb\",\"control\":\"QuoteForm_control__8PbyG\",\"actions\":\"QuoteForm_actions__Ynqfk\"};","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n\tconst [isEntering, setIsEntering] = useState(false);\n\tconst authorInputRef = useRef();\n\tconst textInputRef = useRef();\n\n\tfunction submitFormHandler(event) {\n\t\tevent.preventDefault();\n\n\t\tconst enteredAuthor = authorInputRef.current.value;\n\t\tconst enteredText = textInputRef.current.value;\n\n\t\t// optional: Could validate here\n\n\t\tprops.onAddQuote({ author: enteredAuthor, text: enteredText });\n\t}\n\n\tconst formFocusedHandler = () => {\n\t\tsetIsEntering(true);\n\t};\n\n\tconst finishedEnteringHandler = () => {\n\t\tsetIsEntering(false);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Prompt when={isEntering} message={location => \"Are you sure to leave ?\"} />\n\t\t\t<Card>\n\t\t\t\t<form onFocus={formFocusedHandler} className={classes.form} onSubmit={submitFormHandler}>\n\t\t\t\t\t{props.isLoading && (\n\t\t\t\t\t\t<div className={classes.loading}>\n\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t\t<label htmlFor='author'>Author</label>\n\t\t\t\t\t\t<input type='text' id='author' ref={authorInputRef} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t\t<label htmlFor='text'>Text</label>\n\t\t\t\t\t\t<textarea id='text' rows='5' ref={textInputRef}></textarea>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t\t<button onClick={finishedEnteringHandler} className='btn'>Add Quote</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api'\r\n\r\nconst NewQuote = () => {\r\n    const { sendRequest, status } = useHttp(addQuote);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (status === 'completed') {\r\n            history.push('/quotes');\r\n        }\r\n    }, [status, history]);\r\n\r\n    const addQuoteHandler = quoteData => {\r\n        sendRequest(quoteData);\r\n    }\r\n\r\n    return (\r\n        <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n    );\r\n}\r\n\r\nexport default NewQuote;"],"names":["className","classes","httpReducer","state","action","type","data","error","status","responseData","errorMessage","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","console","log","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","props","children","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","Fragment","Prompt","when","location","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","ref","rows","onClick","useHttp","history","useHistory","useEffect"],"sourceRoot":""}